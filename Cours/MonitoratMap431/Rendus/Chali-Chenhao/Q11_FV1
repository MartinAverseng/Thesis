//On construit un domaine omega ainsi qu'un maillage associe.
int N=10;
real eps = 10e-10;
border a(t=0,1){x=t;y=0;label=1;}
border b(t=0,1){x=1;y=t;label=2;}
border c(t=0,1){x=1-t;y=1;label=3;}
border d(t=0,1){x=0;y=1-t;label=4;}
mesh Th = buildmesh(a(N)+b(N)+c(N)+d(N));
//On definit des espaces d'elements finis et on declare des fonctions
//dans ces espaces 
fespace Vh(Th,P2);
Vh u1,u2,v1,v2;
fespace Ph(Th,P1);
Ph p,q;
func uu= sin(y*pi)/10;
func vv= cos(x*pi)/10;
plot(Th,wait=1,fill=1,ps="Lshape.eps");// see figure 
real coef=1;
 real minT0= checkmovemesh(Th,[x,y]); // the min triangle area
 while(1) // find a correct move mesh
 {
   real minT=checkmovemesh(Th,[x+coef*uu,y+coef*vv]);//the min triangle area
   if (minT > minT0/5) break ; // if big enough
   coef/=1.5;
 }

 Th=movemesh(Th,[x+coef*uu,y+coef*vv]);
 plot(Th,wait=1,fill=1,ps="movemesh.eps");// see figure
//FV du probleme
solve FV1([u1,u2,p],[v1,v2,q])=
//On developpe des produit tensoriels. 
int2d(Th)(dx(u1)*dx(v1)+dx(u2)*dx(v2)+dy(u1)*dy(v1)+dy(u2)*dy(v2))
-int2d(Th)((dx(v1)+dy(v2))*p)
-int2d(Th)((dx(u1)+dy(u2))*q) //forme bilineaire
-int2d(Th)(eps*(p*q)) //terme de perturbation pour imposer que int(p)=0
+int2d(Th)(v2) //forme lineaire car f=(0,-1)
+on(1,u1=0,u2=0); //CAL de Dirichlet sur 1

//Resolution du probleme par les deux formulations variationnelles FV2
FV1;

//Visualiser les resultats
plot([u1,u2],wait=1,value=true,cmm="le champs de vitesse avec sigma2");
plot(p,wait=1,value=true,cmm="la pression avec sigma2");
